# ==========================================
# Nome da aplicação
# ==========================================
spring.application.name=trab_republica

# ==========================================
# CORS - libera o frontend local e o deploy
# (sobreponha via CORS_ORIGINS no env se quiser)
# ==========================================
cors.origins=${CORS_ORIGINS:http://localhost:5173,http://localhost:3000}

# ==========================================
# DATASOURCE
# - Em produção (Render) usa as vars de ambiente:
#     SPRING_DATASOURCE_URL
#     SPRING_DATASOURCE_USERNAME
#     SPRING_DATASOURCE_PASSWORD
# - Local: H2 in-memory por padrão
# ==========================================
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sa}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER:org.h2.Driver}

# ==========================================
# JPA / Hibernate
# - Cria ou atualiza o schema após existirem os ENUMs
# ==========================================
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_FORMAT_SQL:true}

# Escolha o dialect adequado:
# - Em produção, defina via env SPRING_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
# - Localmente, o padrão H2Dialect funciona.
spring.jpa.properties.hibernate.dialect=${SPRING_HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}

# ==========================================
# Scripts de inicialização
# 1) schema-postgresql.sql → cria os tipos ENUM no Postgres
# 2) data.sql            → popula tabelas
# ==========================================
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema-postgresql.sql
spring.sql.init.data-locations=classpath:data.sql

# ==========================================
# JWT – Configuração do Token
# ==========================================
api.security.token.secret=${API_SECURITY_TOKEN_SECRET:minha-chave-secreta-super-dificil-de-adivinhar}
api.security.token.expiration=${API_SECURITY_TOKEN_EXPIRATION:86400000}

# ==========================================
# Porta – permite override pelo Render
# ==========================================
server.port=${PORT:8080}
